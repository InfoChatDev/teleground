name: Cross-platform Alpha Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --onefile index.py
          mkdir -p dist_upload
          mv dist/* dist_upload/

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: flask-${{ runner.os }}
          path: dist_upload/*

  release:
    name: Create Alpha Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifact files
        run: ls -R artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIHTUB_TOKEN }}
        with:
          tag_name: alpha-${{ github.run_number }}
          release_name: Alpha Release ${{ github.run_number }}
          prerelease: true

      - name: Upload Linux binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIHTUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/flask-Linux/index
          asset_name: flask-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIHTUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/flask-Windows/index.exe
          asset_name: flask-windows.exe
          asset_content_type: application/vnd.microsoft.portable-executable

      - name: Upload macOS binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIHTUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/flask-macOS/index
          asset_name: flask-macos
          asset_content_type: application/octet-stream

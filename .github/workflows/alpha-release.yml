name: Cross-Platform Release

on:
  push:
    branches:
      - main

permissions:
  contents: write  # 必须添加这个权限才能创建release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Verify files
      shell: bash
      run: |
        ls -la
        if [ ! -f index.py ]; then
          echo "::error::index.py not found"
          exit 1
        fi
        [ -d static ] && echo "static dir exists" || echo "static dir not found (optional)"
        [ -d templates ] && echo "templates dir exists" || echo "templates dir not found (optional)"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask pyinstaller

    - name: Build executable
      shell: bash
      run: |
        mkdir -p static templates
        
        # 统一使用app作为基础名称
        OUTPUT_NAME="app-${{ matrix.os }}"
        [ "${{ matrix.os }}" == "windows-latest" ] && OUTPUT_NAME="app-win.exe"
        
        pyinstaller --onefile --name=$OUTPUT_NAME \
          $( [ -d static ] && echo "--add-data 'static:static'" ) \
          $( [ -d templates ] && echo "--add-data 'templates:templates'" ) \
          index.py
        
        # 移动文件到根目录
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          mv dist/$OUTPUT_NAME .
        else
          mv dist/$OUTPUT_NAME $OUTPUT_NAME
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-${{ matrix.os }}
        path: |
          app-*
          app-win.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: app-*
        merge-multiple: true

    - name: List downloaded files
      run: ls -la artifacts/

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: alpha-${{ github.run_number }}
        name: "Build #${{ github.run_number }}"
        body: |
          🌍 跨平台可执行文件 | Commit: ${{ github.sha }}
          | 系统       | 文件           |
          |------------|----------------|
          | Windows    | `app-win.exe`  |
          | macOS      | `app-macos`    |
          | Linux      | `app-ubuntu`   |
        prerelease: true
        files: |
          artifacts/app-ubuntu
          artifacts/app-macos
          artifacts/app-win.exe

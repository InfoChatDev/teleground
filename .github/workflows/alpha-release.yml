name: Cross-Platform Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: 
          - ubuntu-latest    # 24.04
          - ubuntu-22.04
          #- ubuntu-20.04   # 已弃用，将于2025-04-15移除
          - macos-latest    # macOS 14
          - macos-13
          - windows-latest  # 2022 (Win10)
          - windows-2025    # Win11
        python-version: ["3.8"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Verify files
      shell: bash
      run: |
        # 静默检查目录（不显示警告）
        [ -d static ] && echo "static directory exists" || true
        [ -d templates ] && echo "templates directory exists" || true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask pyinstaller

    - name: Build executable
      shell: bash
      run: |
        # 自动创建必要目录
        mkdir -p static templates

        # 智能路径处理
        if [[ "${{ matrix.os }}" == windows* ]]; then
          SEP=";"
          EXT=".exe"
        else
          SEP=":"
          EXT=""
        fi

        # 动态生成PyInstaller参数
        PYI_ARGS="--onefile"
        [ -d "static" ] && PYI_ARGS+=" --add-data static${SEP}static"
        [ -d "templates" ] && PYI_ARGS+=" --add-data templates${SEP}templates"

        # 系统版本映射
        case "${{ matrix.os }}" in
          ubuntu-latest)   SYS_TAG="ubuntu24" ;;
          ubuntu-22.04)    SYS_TAG="ubuntu22" ;;
          macos-latest)    SYS_TAG="macos14" ;;
          macos-13)        SYS_TAG="macos13" ;;
          windows-latest)  SYS_TAG="win10" ;;
          windows-2025)    SYS_TAG="win11" ;;
        esac

        OUTPUT_NAME="app-${SYS_TAG}${EXT}"
        
        # 执行构建
        pyinstaller $PYI_ARGS --name "$OUTPUT_NAME" index.py
        mv dist/* .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: |
          app-*
          *.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: '*-build'
        merge-multiple: true

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: alpha-${{ github.run_number }}
        name: "Build #${{ github.run_number }}"
        body: |
          ## 支持系统列表
          | 系统版本       | 对应文件          |
          |----------------|-------------------|
          | Windows 11     | `app-win11.exe`   |
          | Windows 10     | `app-win10.exe`   |
          | macOS 14       | `app-macos14`     |
          | macOS 13       | `app-macos13`     |
          | Ubuntu 24.04   | `app-ubuntu24`    |
          | Ubuntu 22.04   | `app-ubuntu22`    |

          **注意事项**  
          ✅ 使用前请确保系统满足最低要求  
          ⚠️ Ubuntu 20.04 支持已终止  
          📅 构建号: `${{ github.run_number }}`  
          🆔 提交ID: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
        prerelease: true
        files: |
          artifacts/app-ubuntu24
          artifacts/app-ubuntu22
          artifacts/app-macos14
          artifacts/app-macos13
          artifacts/app-win10.exe
          artifacts/app-win11.exe

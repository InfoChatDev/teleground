name: Alpha Pre-release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8']
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build Flask App
      shell: bash
      run: |
        # 一键创建构建目录并复制文件
        mkdir -p build
        cp index.py build/
        [ -d static ] && cp -r static build/ || true
        [ -d templates ] && cp -r templates build/ || true

        # 创建平台专属压缩包
        tar -czf flask-app-${{ matrix.os }}.tar.gz -C build .

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: flask-alpha-${{ matrix.os }}
        path: flask-app-${{ matrix.os }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Alpha Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: alpha-${{ github.run_id }}  # 唯一标签
        release_name: "Alpha Build #${{ github.run_id }}"
        body: |
          🔬 **Automated Alpha Build**  
          ⚡ Run ID: `${{ github.run_id }}`  
          🚀 Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
        prerelease: true
        files: |
          artifacts/flask-alpha-ubuntu-latest.tar.gz
          artifacts/flask-alpha-macos-latest.tar.gz
          artifacts/flask-alpha-windows-latest.tar.gz

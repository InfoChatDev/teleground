name: Cross-Platform Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: 
          - ubuntu-24.04
          - ubuntu-22.04
          - ubuntu-20.04
          - macos-15-large
          - macos-15-xlarge
          - macos-14-large
          - macos-14-xlarge
          - macos-13
          - macos-13-xlarge
          - windows-2025
          - windows-2022
        python-version: ["3.8"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Verify files
      shell: bash
      run: |
        ls -la
        [ -d static ] || echo "::warning::static directory not found (optional)"
        [ -d templates ] || echo "::warning::templates directory not found (optional)"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask pyinstaller

    - name: Build executable
      shell: bash
      run: |
        mkdir -p static templates
        
        # Âä®ÊÄÅÁîüÊàêadd-dataÂèÇÊï∞
        ADD_DATA_ARGS=""
        if [[ "${{ matrix.os }}" == windows-* ]]; then
          SEP=";"
        else
          SEP=":"
        fi
        
        [ -d "static" ] && ADD_DATA_ARGS+="--add-data static${SEP}static "
        [ -d "templates" ] && ADD_DATA_ARGS+="--add-data templates${SEP}templates "

        # ËÆæÁΩÆËæìÂá∫Êñá‰ª∂Âêç
        case "${{ matrix.os }}" in
          ubuntu-24.04)    OUTPUT_NAME="app-ubuntu24" ;;
          ubuntu-22.04)    OUTPUT_NAME="app-ubuntu22" ;;
          ubuntu-20.04)    OUTPUT_NAME="app-ubuntu20" ;;
          macos-15-*)      OUTPUT_NAME="app-macos15" ;;
          macos-14-*)      OUTPUT_NAME="app-macos14" ;;
          macos-13*)       OUTPUT_NAME="app-macos13" ;;
          windows-2025)    OUTPUT_NAME="app-win11.exe" ;;
          windows-2022)    OUTPUT_NAME="app-win10.exe" ;;
          *)               OUTPUT_NAME="app-${{ matrix.os }}" ;;
        esac

        pyinstaller --onefile --name="$OUTPUT_NAME" $ADD_DATA_ARGS index.py
        mv dist/* .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: |
          app-*
          *.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: '*-build'
        merge-multiple: true

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: alpha-${{ github.run_number }}
        name: "Build #${{ github.run_number }}"
        body: |
          Supported Systems: Win10/11, macOS 13-15, Ubuntu 20.04-24.04
          üåç Cross-Platform Executables | Commit: ${{ github.sha }}
          | System             | File              |
          |--------------------|-------------------|
          | Windows 11 (2025) | `app-win11.exe`   |
          | Windows 10 (2022) | `app-win10.exe`   |
          | macOS 15          | `app-macos15`     |
          | macOS 14          | `app-macos14`     |
          | macOS 13          | `app-macos13`     |
          | Ubuntu 24.04      | `app-ubuntu24`    |
          | Ubuntu 22.04      | `app-ubuntu22`    |
          | Ubuntu 20.04      | `app-ubuntu20`    |
          **Additional Info**  
          Generated by Deepseek-R1 AI Assistant  
          Support Level:  
          ‚úÖ Windows 10/11  
          ‚úÖ macOS (Intel/Apple Silicon)  
          ‚úÖ Ubuntu LTS versions
        prerelease: true
        files: |
          artifacts/app-ubuntu24
          artifacts/app-ubuntu22
          artifacts/app-ubuntu20
          artifacts/app-macos15
          artifacts/app-macos14
          artifacts/app-macos13
          artifacts/app-win11.exe
          artifacts/app-win10.exe

name: Cross-Platform Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Verify files
      shell: bash
      run: |
        ls -la
        [ -d static ] || echo "::warning::static directory not found (optional)"
        [ -d templates ] || echo "::warning::templates directory not found (optional)"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask pyinstaller

    - name: Build executable
      shell: bash
      run: |
        # 自动创建所需目录（即使为空）
        mkdir -p static templates
        
        # 动态生成add-data参数
        ADD_DATA_ARGS=""
        if [ -d "static" ]; then
          [ "${{ matrix.os }}" == "windows-latest" ] && SEP=";" || SEP=":"
          ADD_DATA_ARGS+="--add-data static${SEP}static "
        fi
        if [ -d "templates" ]; then
          [ "${{ matrix.os }}" == "windows-latest" ] && SEP=";" || SEP=":"
          ADD_DATA_ARGS+="--add-data templates${SEP}templates "
        fi

        # 设置输出文件名
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          OUTPUT_NAME="app-win.exe"
        else
          OUTPUT_NAME="app-${{ matrix.os }}"
        fi

        # 执行PyInstaller构建
        pyinstaller --onefile --name="$OUTPUT_NAME" $ADD_DATA_ARGS index.py

        # 移动生成的可执行文件
        mv dist/* .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-${{ matrix.os }}
        path: |
          app-*
          app-win.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: app-*
        merge-multiple: true

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: alpha-${{ github.run_number }}
        name: "Build #${{ github.run_number }}"
        body: |
          🌍 Cross-Platform Executables | Commit: ${{ github.sha }}
          | System      | File          |
          |-------------|---------------|
          | Windows     | `app-win.exe` |
          | macOS       | `app-macos`    |
          | Linux       | `app-ubuntu`  |
        prerelease: true
        files: |
          artifacts/app-ubuntu-latest
          artifacts/app-macos-latest
          artifacts/app-win.exe
